//scad pillars and bars generated by code

$fa = 5;
$fn = 5;
radius = 1.0;
inner = 0.5;
delta = 0.5;
height = 0.4;
foot_radius = 2.5;
foot_height = 2.5;
epsilon = 0.01;

module foot(x_coord, y_coord)
{
	translate([x_coord, y_coord, 0])
    difference()
    {
        cylinder(foot_height, foot_radius, radius);
        translate([0, 0, -epsilon])
        cylinder(foot_height+2*epsilon, foot_radius-inner, radius-inner);
    }
}
module circle1(x_coord, y_coord, z_coord)
{
	translate([x_coord, y_coord, z_coord])
	cylinder(.2, radius-.5, radius-.5);
}
module circle2(x_coord, y_coord, z_coord)
{
	translate([x_coord, y_coord, z_coord])
	cylinder(.2, radius, radius);
}
module slanted_pillar(x_coord1, y_coord1, z_coord1, x_coord2, y_coord2, z_coord2)
{
	hull()
	{
		circle1(x_coord1, y_coord1, z_coord1);
		circle2(x_coord2, y_coord2, z_coord2);
	}
}
module pillar(x_coord, y_coord, z_coord, z_height)
{
	if(z_height > 5)
	{
		hull()
		{
			circle1(x_coord, y_coord, z_height);
			circle2(x_coord, y_coord, z_height-5);
		}
        translate([x_coord, y_coord, z_coord])
        {
            difference()
            {
                linear_extrude(z_height-5+epsilon)
                {
                    circle(radius);
                }
                translate([0, 0, -epsilon])
                linear_extrude(z_height-5)
                {
                    circle(radius-inner);
                }
            }
        }
	}
	else
	{
		translate([x_coord, y_coord, z_coord])
        {
            difference()
            {
                linear_extrude(z_height)
                {
                    circle(radius);
                }
                translate([0, 0, -epsilon])
                linear_extrude(z_height+2*epsilon)
                {
                    circle(radius-inner);
                }
            }
        }
	}
}
//does not work for horizontal bridges, use bridge1
module bridge(x0, y0, x1, y1, z_height)
{
translate([0, 0, z_height])
linear_extrude(height)
polygon(points = [[x0+delta, y0], [x0-delta, y0], [x1-delta, y1], [x1+delta, y1]]);
}

//does not work for vertical bridges, use bridge
module bridge1(x0, y0, x1, y1, z_height)
{
translate([0, 0, z_height])
linear_extrude(height)
polygon(points = [[x0, y0+delta], [x0, y0-delta], [x1, y1-delta], [x1, y1+delta]]);
}
